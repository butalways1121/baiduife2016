/*栅格化布局的作用在于更有效地控制元素在网页中所占比例的大小。比如，博客中有一个留言板模块，在比较大的屏幕上，我们希望它占了右边的25%的宽度，在手机等比较小的屏幕上，我们希望它占100%的宽度并且出现在博客文章的下方。栅格化布局是一种实现这一需求的办法，它的好处是把所有的宽度分为固定栏数（常用12栏），从而更高效的控制元素宽度，而这功能，我们使用HTML和CSS就能实现了。
		在实现过程中个人认为几个关键点在于：
		1.对于盒模型的确切理解，怎么解决标准下盒模型对响应式栅格化布局的影响；2.对于实验性属性的兼容性问题，怎么用其他解决方案来代替；3.代码的优雅程度。*/
		body{
			margin: 0;
			padding: 0;
		}
		.wrapper{
			box-sizing: border-box;/*box-sizing 属性允许您以特定的方式定义匹配某个区域的特定元素,例如，假如您需要并排放置两个带边框的框，可通过将 box-sizing 设置为 "border-box"。这可令浏览器呈现出带有指定宽度和高度的框，并把边框和内边距放入框中。
			border-box:为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。*/
			width: 100%;
			padding: 10px;
		}
		.outer{
			box-sizing: border-box;
			float: left;
			padding: 10px;
		}
		.inner{
			height: 50px;
			background-color: #eee;
			border: 1px solid #999;
		}
		@media (min-width: 769px){/*浏览器宽度在769px以上的，如果浏览器宽度小于768px则里面的规则不生效*/
			.col-md-1{
				width: 8.33333%;
			}
			.col-md-2{
				width: 16.6667%;
			}
			.col-md-3{
				width: 25%;
			}
			.col-md-4{
				width: 33.3333%;
			}
			.col-md-5{
				width: 41.6%;
			}
			.col-md-6{
				width: 50%;
			}
			.col-md-7{
				width: 58.3333%;
			}
			.col-md-8{
				width: 66.6667%;
			}
			.col-md-9{
				width: 75%;
			}
			.col-md-10{
				width: 83.3333%;
			}
			.col-md-11{
				width: 91.66667%;
			}
			.col-md-12{
				width: 100%;
			}
		}
		@media (max-width: 768px){/*浏览器宽度在769px以下的，如果浏览器宽度大于768px则里面的规则不生效*/
			.col-sm-1{
				width: 8.33333%;
			}
			.col-sm-2{
				width: 16.6667%;
			}
			.col-sm-3{
				width: 25%;
			}
			.col-sm-4{
				width: 33.3333%;
			}
			.col-sm-5{
				width: 41.6%;
			}
			.col-sm-6{
				width: 50%;
			}
			.col-sm-7{
				width: 58.3333%;
			}
			.col-sm-8{
				width: 66.6667%;
			}
			.col-sm-9{
				width: 75%;
			}
			.col-sm-10{
				width: 83.3333%;
			}
			.col-sm-11{
				width: 91.66667%;
			}
			.col-sm-12{
				width: 100%;
			}
		}